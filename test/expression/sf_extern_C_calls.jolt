// Copyright (c) 2014, Jeff Cohen
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
// 
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

// Test extern C function calls.

@extern_C func printf(char const*, ...) -> int
@extern_C func sqrt(double) -> double
@extern_C func strcpy(char*, char const*) -> char*
@extern_C func strcat(char*, char const*) -> char*

func Main() -> int {
    Test1()
    Test2()
    return 0
}

func Test1() {
    var buf: char[128]
    strcat(strcpy(&buf[0], "part one"), " / part two")
    printf("Test1: %s\n", &buf[0])
}

func Test2() {
    printf("Test2a: %g %g\n", 23.64, sqrt(36))

    var v1: int = 63
    printf("Test2b: %d %d\n", v1, 97)

    var v2: bool = false
    printf("Test2c: %d %d\n", v2, true)

    var v3: float = 653.43
    var v4: double = 5256.2
    printf("Test2d: %.2f %.1f\n", v3, v4)

    var v5: char = '&'
    printf("Test2e: %c %c %hhd\n", v5, '9', v5)

    var v6: long = 123456789000
    printf("Test2f: %lld %lld\n", v6, 999999999999)

    var v7: short = 5432
    printf("Test2g: %hd\n", v7)

    printf("Test2h: %s\n", "Hello world!")
}
