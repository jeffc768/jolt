// Copyright (c) 2014, Jeff Cohen
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
// 
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

// Test virtual method calls.
// FIXME: multiple inheritance doesn't work correctly yet, as trampolines have
// yet to be implemented to downcast this pointers.

func Main() -> int {
    const ct = RunTests()
    return ct + RunTests()
}

func RunTests() -> int {
    Test1()
    return 0
}

func Test1() {
    Print(  "Test1a: ")
    var v1: C1a
    var v2: C1a* = &v1
    (*v2).m(65)

    Print("\nTest1b: ")
    var v3: C1b
    var v4: C1a* = &v3
    (*v4).m(92)

    Print("\nTest1c: ")
    (*v2).n(38)

    Print("\nTest1d: ")
    (*v4).n(12)

    Print("\nTest1e: ")
    v1.n(78)

    Print("\nTest1f: ")
    v3.n(82)

    Print("\n")
}

class C1a {
    virtual func m(x: int) {
        Print("C1a:m ")
        Print(x)
    }

    @final func n(x: int) {
        m(x)
    }
}

class C1b: C1a {
    override func m(x: int) {
        Print("C1b:m ")
        Print(x)
    }
}
