// Copyright (c) 2014, Jeff Cohen
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
// 
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

// Test member attributes applied to namespaces, especially build.  Such
// attributes are supposed to propagate to the contents of the namespace
// declaration.  Also test global member attribute lists.
// FIXME: once visibility attributes are implemented, use them in addition
// to build.

func Main() -> int {
    const ct = RunTests()
    return ct + RunTests()
}

func RunTests() -> int {
    Test1()
    Test2()
    Test3()
    return 0
}

func Test1() {
    // Start simple.

    Print(  "Test1a: "); Print(A.x)
    Print("\nTest1b: "); Print(A.y)
    Print("\n")
}

@build(true) namespace A {
    const x = 749
    const y = 777
}

@build(false) namespace A {
    const x = 383
    @build({Print("Test1c: fail\n"); true})  const y = 888
}

func Test2() {
    // Get fancier.

    Print(  "Test2a: "); Print(B.C.D.x)
    Print("\nTest2b: "); Print(B.C.y)
    Print("\n")
}

@build(false) namespace B.C.D {
    const x = 654
}

namespace B {
    @build(true) namespace C {
        @build(false) namespace D {
            const x = 654654
        }

        const y = 367
    }
}

@build(false) namespace B.C {
    @build(true) namespace D {
        const x = 274
    }

    const y = 751
}

namespace B {
    namespace C {
        namespace D {
          const x = 991
        }
    }
}

func Test3() {
    // Test global member attribute lists.

    Print(  "Test3a: "); Print(C.x)
    Print("\nTest3b: "); Print(C.y)
    Print("\nTest3c: "); Print(C.z)
    Print("\nTest3d: "); Print(C.D.q)
    Print("\n")
}

namespace C {
@build(false):
    const x = 925
    const y = 251

    @build(true)
    const z = 321   // global build(false) takes precedence

    namespace D {
        const q = 893
    }

@build(true):
    const x = 529
    const y = 152
    const z = 123

    namespace D {
        const q = 398
    }

    @build(true) namespace D {
    @build(false):
        const q = 394
    }

    @build(true) namespace D {
    @build(true):
        @build(false) const q = 395
    }

    @build(false)
    namespace D {
        const q = 396
    }
}
