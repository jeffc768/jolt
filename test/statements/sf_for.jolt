// Copyright (c) 2014, Jeff Cohen
// All rights reserved.
// 
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
// 
// 1. Redistributions of source code must retain the above copyright notice,
//    this list of conditions and the following disclaimer.
// 
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
// 
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.

func Main() -> int {
    const ct = RunTests()
    return ct + RunTests()
}

func RunTests() -> int {
    Test1()
    Test2()
    Test3()
    Test4()
    return 0
}

func Test1() {
    // Test various syntactic forms
    var ary = int[](5, 2, 9, 1, 4, 7, 3, 8, 10, 6)

    Print("Test1a:")
    for x in ary {
        Print(' ')
        Print(x)
        x = x + 1
    }
    Print("\n")

    Print("Test1b:")
    for x const in ary { Print(' '); Print(x) }
    Print("\n")

    Print("Test1c:")
    var ref: int[]& = ary
    for x& in ref {
        Print(' ')
        x = x + 1
        Print(x)
    }
    Print("\n")

    Print("Test1d:")
    for x in ary {
        Print(' ')
        Print(x)
    } else {
        Print(" done")
    }
    Print("\n")

    Print("Test1e:")
    for x const& in ary { Print(' '); Print(x) } else { Print(" done") }
    Print("\n")
}

func Test2() {
    // Test value of for statement.
    var ary = int[](5, 2, 9, 1, 4, 7, 3, 8, 10, 6)

    Print("Test2a: ")
    Print({
        var sum = 0
        for x in ary {
            sum = sum + x
        } else {
            sum * 2
        }
    })
    Print('\n')
}

func Test3() {
    // Test non-local exit from fors.
    var ary = int[](5, 2, 9, 1, 4, 7, 3, 8, 10, 6)

    Print("Test3a: "); Print(Test3_for(ary, 0, 0)); Print("\n")
    Print("Test3b: "); Print(Test3_for(ary, 9, 0)); Print("\n")
    Print("Test3c: "); Print(Test3_for(ary, 7, 0)); Print("\n")
    Print("Test3d: "); Print(Test3_for(ary, 0, 10)); Print("\n")
}

func Test3_for(ary: int[]&, ev1: int, ev2: int) -> int {
    var i: int = 0
    for x in ary {
        i = i + 1
        exit i + 2000 if x == ev1
    } else {
        exit i + 3000 if i == ev2
        i + 4000
    }
}

func Test4() {
    // Test next statement within for loops.
    var ary = int[](5, 2, 9, 1, 4, 7, 3, 8, 10, 6)

    Print("Test4a:")
    for x in ary {
        next if x % 3 == 0
        Print(' ')
        Print(x)
    } else {
        Print("!")
    }
    Print("\n")
}
